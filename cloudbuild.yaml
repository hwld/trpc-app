steps:
  # マイグレーション用のイメージをビルド
  - id: Migrate:Build
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-f",
        "Dockerfile.migrate",
        "-t",
        "gcr.io/$PROJECT_ID/trpc-app/migrate",
        ".",
      ]
  # マイグレーション用のイメージをプッシュ
  - id: Migrate:Push
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/trpc-app/migrate"]
  # マイグレーションを行う
  - id: Migrate:Run
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - |
        docker run -e _DATABASE_URL=$$_DATABASE_URL gcr.io/$PROJECT_ID/trpc-app/migrate sh -c npx prisma migrate deploy
    secretEnv: ["_DATABASE_URL"]

  # コンテナイメージをビルドする
  - id: App:Build
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "docker",
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/trpc-app",
        "--build-arg",
        "_NEXT_PUBLIC_URL=$_NEXT_PUBLIC_URL",
        ".",
      ]

  # コンテナイメージをcontainer registryにプッシュする
  - id: App:Push
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/trpc-app"]
  # コンテナイメージをCloud Runにデプロイする
  - id: App:Deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "trpc-app",
        "--image",
        "gcr.io/$PROJECT_ID/trpc-app",
        "--region",
        "asia-northeast1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
      ]
images:
  - gcr.io/$PROJECT_ID/trpc-app
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/database-url/versions/1
      env: "_DATABASE_URL"
