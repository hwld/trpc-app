// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  themes        AppTheme[]
  themeLikes    AppThemeLike[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model AppTheme {
  id           String         @id @default(cuid())
  title        String
  description  String
  userId       String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  appThemeTags AppThemeTagOnAppTheme[]
  likes        AppThemeLike[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model AppThemeTag {
  id        String     @id @default(cuid())
  name      String
  appThemes AppThemeTagOnAppTheme[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model AppThemeTagOnAppTheme {
  theme AppTheme @relation(fields: [themeId], references: [id], onDelete: Cascade)
  themeId String
  tag AppThemeTag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId String

  @@unique([themeId, tagId])
}

model AppThemeLike {
  id         String   @id @default(cuid())
  appThemeId String
  appTheme   AppTheme @relation(fields: [appThemeId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([appThemeId, userId])
}
